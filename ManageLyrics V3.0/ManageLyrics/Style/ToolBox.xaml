<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ManageLyrics">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="ThemesTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" />

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemesTextBox}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="110" />
    </Style>

    <Style x:Key="TextLyrics" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ThemesTextBox}" >
        <Setter Property="Height" Value="305" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="AcceptsTab" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Padding="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <StackPanel>
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Row="0" Grid.RowSpan="2" Margin="3">
                                    <Grid Width="50" Height="50">
                                        <Grid.Background >
                                            <!--   <ImageBrush ImageSource="{Binding WindowImages}"/> -->
                                            <ImageBrush ImageSource="{Binding Path, Converter={x:Static local:ItemImageConvert.Instance}}" />
                                        </Grid.Background>
                                    </Grid>
                                </StackPanel>
                                
                                <TextBlock Grid.Row="0"
                                           Grid.Column="1"
                                           VerticalAlignment="Center"
                                           Text="{Binding FileName}" FontSize="15" Foreground="LightBlue"/>
                                
                                <StackPanel Grid.Row="1"
                                           Grid.Column="1" VerticalAlignment="Center" Orientation="Horizontal">
                                    
                                    <TextBlock Text="{Binding Artist}" Margin="2, 0, 10 ,0" />
                                    <TextBlock Text="{Binding Title}" />
                                </StackPanel>
                               
                            </Grid>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers >
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ControlDefaultBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ControlSelectedBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ControlSelectedBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource ControlDisabledGlythColour}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemesButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" />
    
    <Style x:Key="ButtonIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource ThemesButton}" >
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="80" />
    </Style>

</ResourceDictionary>